#version 400

// TessEval
layout(triangles, equal_spacing, cw) in;

uniform mat4 perspective_matrix;
uniform mat4 modelview_matrix;

in	vec3 tc_position[];
out vec3 te_position;
out vec3 te_patchDistance;


void main()
{
	vec3 p0 = gl_TessCoord.x * tc_position[0];
	vec3 p1 = gl_TessCoord.y * tc_position[1];
	vec3 p2 = gl_TessCoord.z * tc_position[2];
	te_patchDistance = gl_TessCoord;
	te_position = normalize(p0 + p1 + p2);
	gl_Position = perspective_matrix * modelview_matrix * vec4(te_position, 1);
}